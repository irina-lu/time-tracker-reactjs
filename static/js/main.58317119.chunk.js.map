{"version":3,"sources":["Header/Nav.jsx","Header/UserMenu.jsx","Header/Header.jsx","MainScreen/Calendar.jsx","MainScreen/CalendarButton.jsx","MainScreen/MainScreenHeading.jsx","redux/actions.jsx","redux/types.jsx","Day/TimePicker.jsx","WorklogOptions/WorklogOptions.jsx","Worklog/Worklog.jsx","Worklog/WorklogList.jsx","Day/Day.jsx","Day/DaysList.jsx","MainScreen/Favorite.jsx","MainScreen/MainScreen.jsx","TimeTracking/NewWorklog.jsx","TimeTracking/ActiveWorklog.jsx","TimeTracking/TimeTracking.jsx","GoogleSync/Event.jsx","GoogleSync/EventList.jsx","GoogleSync/GoogleSync.jsx","Main/Main.jsx","Modal/Slider/Slider.jsx","Modal/PopupNewWorklog.jsx","Modal/Notification.jsx","App.jsx","serviceWorker.js","redux/dayReducer.jsx","redux/notificationReducer.jsx","redux/rootReducer.jsx","redux/openPopupReducer.jsx","redux/startTimerReducer.jsx","redux/syncReducer.jsx","index.js"],"names":["Nav","className","href","React","Component","UserMenu","Header","ReactCalendar","useState","Date","date","setDate","value","onChange","locale","calendarType","minDetail","formatShortWeekday","getDay","formatMonthYear","getMonth","CalendarButton","todayDate","moment","format","MainScreenHeading","setFilter","isAll","setAll","onClick","openPopup","type","startTimer","openNotification","status","payload","TimePicker","mapDispatchToProps","deleteWorklog","day","id","connect","index","changeName","name","changeIssue","issue","worklog","isClick","setClick","minuteToHour","hours","Math","floor","toString","padStart","minutes","time","ended","started","defaultValue","onKeyPress","e","key","target","tagName","toUpperCase","autoComplete","autoFocus","worklogs","map","setAllStatuses","statuses","displayNone","isDisable","disableClass","handleClick","split","dayOfWeek","month","dayOfMonth","timesSum","times","item","push","getTimes","reduce","sum","current","totalTime","percent","trunc","width","backgroundColor","countPercent","showWarningStatus","message","style","correctIssues","forEach","includes","every","disabled","createDay","state","useEffect","opacity","cursor","Object","entries","length","display","Favorite","MainScreen","props","isStartTimer","timer","mapDispachToProps","isStopped","popup","sec","setSec","classButton","setClassButton","isPaused","setPaused","startTime","useRef","nameWorklog","setNameWorklog","nameIssue","setNameIssue","today","getHours","getMinutes","stopTimer","interval","setInterval","clearInterval","min","displaySec","displayMin","displayHour","endTime","arrTime","hour","calcEndTime","updateInfoWorklog","getTime","htmlFor","placeholder","isStartTamer","Event","color","event","EventList","eventList","enableSync","sync","defaultChecked","Main","Handle","handle","getHandleProps","left","position","marginLeft","marginTop","zIndex","height","borderRadius","border","boxShadow","Track","source","getTrackProps","valueStart","valueEnd","update","Slide","timeToMinute","minute","slice","parseInt","startTimeMin","endTimeMin","domain","step","mode","values","getRailProps","handles","right","tracks","addWorklogInDay","isOpen","statusNotification","notification","nameError","setNameError","start","setStart","end","setEnd","warningStatus","method","onSubmit","preventDefault","isValid","validate","keys","concat","addInDay","createNewWorklog","handleClose","Snackbar","anchorOrigin","vertical","horizontal","classes","root","open","autoHideDuration","onClose","action","Fragment","isStoppedTimer","setStartTime","setEndTime","setOpen","reason","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","hasOwnProperty","persistedState","serializedState","localStorage","getItem","JSON","parse","console","log","loadFromLocalStorage","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"qtBAwBeA,G,mLAnBX,OACE,wBAAIC,UAAU,aACZ,wBAAIA,UAAU,8BACZ,uBAAGC,KAAK,KAAR,SAEF,wBAAID,UAAU,aACZ,uBAAGC,KAAK,KAAR,WAEF,wBAAID,UAAU,aACZ,uBAAGC,KAAK,KAAR,UAEF,wBAAID,UAAU,aACZ,uBAAGC,KAAK,KAAR,kB,GAdQC,IAAMC,YC6BTC,G,6KA3BX,OACE,wBAAIJ,UAAU,aACZ,wBAAIA,UAAU,4CACZ,uBAAGA,UAAU,kBAAkBC,KAAK,KAClC,0BAAMD,UAAU,mBAAhB,cAGJ,wBAAIA,UAAU,wCACZ,uBAAGA,UAAU,kBAAkBC,KAAK,KAClC,0BAAMD,UAAU,mBAAhB,iBAGJ,wBAAIA,UAAU,wCACZ,uBAAGA,UAAU,kBAAkBC,KAAK,KAClC,0BAAMD,UAAU,mBAAhB,aAGJ,wBAAIA,UAAU,2CACZ,uBAAGA,UAAU,0CAA0CC,KAAK,KAC1D,0BAAMD,UAAU,mBAAhB,uB,GArBWE,IAAMC,YCedE,E,uKAXX,OACE,yBAAKL,UAAU,UACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GANWE,IAAMC,W,mDCoCZG,MArCf,WAA0B,IAAD,EACCC,mBAAS,IAAIC,MADd,mBAChBC,EADgB,KACVC,EADU,KAOvB,OACE,kBAAC,IAAD,CACEC,MAAOF,EACPG,SAPJ,SAAkBH,GAChBC,EAAQD,IAONI,OAAO,KACPC,aAAa,KACbC,UAAW,QACXC,mBAAoB,SAACH,EAAQJ,GAAT,MAClB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKA,EAAKQ,WAE3CC,gBAAiB,SAACL,EAAQJ,GAAT,MACf,CACE,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YACAA,EAAKU,gB,MCpBAC,MAVf,WACE,IAAMC,EAAYC,MAASC,OAAO,gBAClC,OACE,yBAAKvB,UAAU,8BACb,4BAAQA,UAAU,mCAAmCqB,GACrD,kBAAC,EAAD,QC8BSG,MApCf,YAA2C,IAAdC,EAAa,EAAbA,UAAa,EAChBlB,oBAAS,GADO,mBACjCmB,EADiC,KAC1BC,EAD0B,KAaxC,OACE,yBAAK3B,UAAU,sBACb,kBAAC,EAAD,MACA,4BACEA,UAAS,qDACN0B,EAAa,qBAAL,IAEXE,QAjBN,WACED,GAAO,GACPF,GAAU,KAWR,OAQA,4BACEzB,UAAS,kCACP0B,EAAQ,GAAK,sBAEfE,QApBN,WACED,GAAO,GACPF,GAAU,KAcR,e,OCfC,SAASI,IACd,MAAO,CACLC,KCfsB,cDmBnB,SAASC,IACd,MAAO,CACLD,KCpBuB,eDwCpB,SAASE,EAAiBC,GAC/B,MAAO,CACLH,KCvC6B,oBDwC7BI,QAASD,G,kBElBEE,MAvBf,WACE,OACE,yBAAKnC,UAAU,eACb,yBAAKA,UAAU,uBACf,wBAAIA,UAAU,0BACZ,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,wC,kBCSR,IAAMoC,EAAqB,CACzBC,cHgCK,SAAuBC,EAAKC,GACjC,MAAO,CACLT,KCzD0B,iBD0D1BQ,MACAJ,QAASK,KGjCEC,cAAQ,KAAMJ,EAAdI,EA5Bf,YAAyD,IAA/B/B,EAA8B,EAA9BA,KAAMgC,EAAwB,EAAxBA,MAAOJ,EAAiB,EAAjBA,cACrC,OACE,wBAAIrC,UAAU,mBACZ,wBAAIA,UAAU,yBACZ,4BAAQA,UAAU,wBAAlB,cAEF,wBAAIA,UAAU,yBACZ,4BAAQA,UAAU,wBAAlB,cAEF,wBAAIA,UAAU,yBACZ,4BAAQA,UAAU,wBAAlB,oBAEF,wBAAIA,UAAU,yBACZ,4BACEA,UAAU,uBACV4B,QAAS,kBAAMS,EAAc5B,EAAMgC,KAFrC,eCwGR,IAAML,EAAqB,CACzBM,WJlGK,SAAoBC,EAAML,GAC/B,MAAO,CACLR,KCzBuB,cD0BvBI,QAASS,EACTL,QI+FFM,YJ3FK,SAAqBC,EAAOP,GACjC,MAAO,CACLR,KChCwB,eDiCxBI,QAASW,EACTP,SI0FWE,cAAQ,KAAMJ,EAAdI,EAxHf,YAAqE,IAAlD/B,EAAiD,EAAjDA,KAAMqC,EAA2C,EAA3CA,QAASL,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,WAAYE,EAAe,EAAfA,YAAe,EACtCrC,oBAAS,GAD6B,mBAC3DwC,EAD2D,KAClDC,EADkD,KAGlE,SAASC,EAAatC,GACpB,IAAIuC,EAAQC,KAAKC,MAAMzC,EAAQ,IAC5B0C,WACAC,SAAS,EAAG,KACXC,GAAW5C,EAAgB,GAARuC,GAAYG,WAAWC,SAAS,EAAG,KAC1D,MAAM,GAAN,OAAUJ,EAAV,YAAmBK,GAErB,IAAMC,EAAOV,EAAQW,MAAQX,EAAQY,QA6CrC,OACE,wBAAI1D,UAAU,oBACZ,yBAAKA,UAAU,WACb,uBAAGA,UAAU,0BACViD,EAAaH,EAAQY,SACtB,0BAAM1D,UAAU,+BACb,IADH,UAEKiD,EAAaH,EAAQW,SAG5B,0BACEzD,UAAS,0CAAqC8C,EAAQb,UAExD,yBAAKjC,UAAU,yBACZ+C,EACC,2BACE/C,UAAU,sBACV2C,KAAK,aACLgB,aAAcb,EAAQD,MACtBe,WAlCZ,SAAmBC,GACjB,GAAc,UAAVA,EAAEC,KACmC,UAAnCD,EAAEE,OAAOC,QAAQC,cAA2B,CAC9C,IAAIpB,EAAQgB,EAAEE,OAAOpD,MACrBqC,GAAS,GAMTJ,EALiB,CACfL,GAAIE,EACJI,MAAOA,EACPZ,OAAQ,IAEYxB,KAyBhByD,aAAa,MACbC,WAAS,IAGX,0BAAMnE,UAAU,sBAAsB4B,QA3ChD,SAA2BiC,GACzBb,GAAS,KA2CEF,EAAQD,OAGZE,EACC,2BACE/C,UAAU,gBACV2C,KAAK,eACLgB,aAAcb,EAAQH,KACtBiB,WAxEZ,SAAkBC,GAChB,IAAIlB,EACU,UAAVkB,EAAEC,KACmC,UAAnCD,EAAEE,OAAOC,QAAQC,gBAEjBtB,EADqB,KAAnBkB,EAAEE,OAAOpD,MACJmC,EAAQH,KAERkB,EAAEE,OAAOpD,MAElBqC,GAAS,GAMTN,EALgB,CACdH,GAAIE,EACJE,KAAMA,EACNV,OAAQ,IAEUxB,KA0DdyD,aAAa,MACbC,WAAS,IAGX,uBAAGnE,UAAU,gBAAgB4B,QAjFvC,SAA6BiC,GAC3Bb,GAAS,KAiFEF,EAAQH,OAIf,0BAAM3C,UAAU,iBAAhB,UAAoCiD,EAAaO,GAAjD,QACA,4BAAQxD,UAAU,gBAChB,0BAAMA,UAAU,mBAAhB,UAGJ,yBAAKA,UAAU,qBACb,4BAAQA,UAAU,wBAChB,0BAAMA,UAAU,yBAGpB,yBAAKA,UAAU,yBACb,kBAAC,EAAD,CAAgBS,KAAMA,EAAMgC,MAAOA,SCtG5BD,kBAAQ,KAAM,KAAdA,EATf,YAA0C,IAAnB4B,EAAkB,EAAlBA,SAAU3D,EAAQ,EAARA,KAC/B,OACE,wBAAIT,UAAU,iBACXoE,EAASC,KAAI,SAACvB,EAASL,GAAV,OACZ,kBAAC,EAAD,CAASK,QAASA,EAASgB,IAAKrB,EAAOA,MAAOA,EAAOhC,KAAMA,WC8GnE,IAAM2B,EAAqB,CACzBkC,eNlDK,SAAwBC,EAAUjC,GACvC,MAAO,CACLR,KChE4B,mBDiE5BQ,MACAiC,aM+CFvC,oBAGaQ,cAAQ,KAAMJ,EAAdI,EAnHf,YAQI,IAPFF,EAOC,EAPDA,IACAkC,EAMC,EANDA,YACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,aACAJ,EAGC,EAHDA,eACAtC,EAEC,EAFDA,iBACA2C,EACC,EADDA,YAEMlE,EAAOa,IAAOgB,EAAI,GAAI,cAAcf,OAAO,eAAeqD,MAAM,KADrE,cAEsCnE,EAFtC,GAEMoE,EAFN,KAEiBC,EAFjB,KAEwBC,EAFxB,KAuBGC,EAVJ,WACE,IAAIC,EAAQ,GAKZ,OAJA3C,EAAI,GAAG+B,KAAI,SAACa,GACV,IAAI1B,EAAO0B,EAAKzB,MAAQyB,EAAKxB,QAC7BuB,EAAME,KAAK3B,MAENyB,EAGKG,GACOC,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,IAAS,GACzDC,EApBJ,SAAsB7E,GACpB,IAAIuC,EAAQC,KAAKC,MAAMzC,EAAQ,IAC5B0C,WACAC,SAAS,EAAG,KACXC,GAAW5C,EAAgB,GAARuC,GAAYG,WAAWC,SAAS,EAAG,KAC1D,OAAIJ,GAAS,KAAY,QACnB,GAAN,OAAUA,EAAV,YAAmBK,GAcLN,CAAa+B,GAUzBS,EARJ,WACE,IAAIA,EAAUtC,KAAKuC,MAAkB,IAAXV,EAAkB,KAC5C,OAAIS,GAAW,IACN,CAAEE,MAAM,OAASC,gBAAiB,WAElC,CAAED,MAAM,GAAD,OAAKF,EAAL,MAGJI,GA6Bd,SAASC,EAAkB7D,EAAQ8D,GAKjC/D,EAJsB,CACpBC,OAAQA,EACR8D,QAASA,IAGXpB,IAGF,OACE,6BAAS3E,UAAU,qBAAqBgG,MAAOxB,GAC7C,yBAAKxE,UAAU,wBACb,wBAAIA,UAAU,aACX6E,EADH,IACe,IACb,0BAAM7E,UAAU,sBACb8E,EADH,IACWC,IAGb,yBAAK/E,UAAU,2BACb,uBAAGA,UAAU,mBAAb,UAAmCwF,EAAnC,QACA,yBAAKxF,UAAU,qBACb,yBAAKA,UAAU,sBAAsBgG,MAAOP,MAGhD,4BACEzF,UAAU,oBACV4B,QArDR,WACE,IAAMqE,EAAgB,CAAC,UAAW,UAAW,UAAW,WAClD1B,EAAW,GACjBjC,EAAI,GAAG4D,SAAQ,SAAChB,GACK,KAAfA,EAAKrC,OACP0B,EAASY,KAAK,WACdW,EACE,UACA,mEAEQG,EAAcE,SAASjB,EAAKrC,OAItC0B,EAASY,KAAK,SAHdZ,EAASY,KAAK,SACdW,EAAkB,QAAS,6BAKRvB,EAAS6B,OAAM,SAAClB,GACrC,MAAgB,SAATA,MAIPY,EAAkB,OAAQ,qCAE5BxB,EAAeC,EAAUjC,EAAI,KA8BvB+D,SAAU5B,EACVuB,MAAOtB,GAEP,0BAAM1E,UAAU,mBAAhB,cAGJ,kBAAC,EAAD,CAAaS,KAAM6B,EAAI,GAAI8B,SAAU9B,EAAI,KACzC,kBAAC,EAAD,UCjEN,IAMMF,EAAqB,CACzBkE,UPRK,SAAmBxC,GACxB,MAAO,CACLhC,KC7CsB,aD8CtBgC,SOQWtB,eAVS,SAAC+D,GACvB,MAAO,CACLjE,IAAKiE,EAAMjE,OAQyBF,EAAzBI,EApDf,YAAoD,IAM9CgC,EANc8B,EAA+B,EAA/BA,UAAWhE,EAAoB,EAApBA,IAAKqC,EAAe,EAAfA,YAC9BtD,EAAYC,MAASC,OAAO,cAChCiF,qBAAU,WACRF,EAAUjF,KACT,IAIH,IACMqD,EAAe,CAAE+B,QAAS,MAAOC,OAAQ,QAE/C,OACE,6BACGC,OAAOC,QAAQtE,GAAK+B,KAAI,SAAC/B,EAAKG,GAC7B,OAAIpB,IAAciB,EAAI,IAAMA,EAAI,GAAGuE,OAAS,GAC1CrC,EAAc,CAAEsC,QAAS,QAEvB,kBAAC,EAAD,CACEtC,YAAaA,EACblC,IAAKA,EACLwB,IAAKrB,EACLgC,WAbM,EAcNC,aAAcA,KAGTrD,IAAciB,EAAI,GAEzB,kBAAC,EAAD,CACEA,IAAKA,EACLwB,IAAKrB,EACLgC,WAtBM,EAuBNC,aAAcA,IAIX,kBAAC,EAAD,CAAKpC,IAAKA,EAAKwB,IAAKrB,EAAOkC,YAAaA,W,MCxB1CoC,MAff,WACE,OACE,6BAAS/G,UAAU,YACjB,wBAAIA,UAAU,mBAAd,mBACA,uBAAGA,UAAU,qBAAb,mCACA,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,iBAChB,0BAAMA,UAAU,mBAAhB,qBAEF,uBAAGA,UAAU,oBAAb,mBCUOgH,MAhBf,SAAoBC,GAAQ,IAAD,EACD1G,oBAAS,GADR,mBAClBmB,EADkB,KACXC,EADW,KAOzB,OACE,6BAAS3B,UAAU,iCACjB,wBAAIA,UAAU,mBAAd,eACA,kBAAC,EAAD,CAAmByB,UAPvB,SAAmBC,GACjB,OAAOC,EAAOD,MAOXA,EAAQ,kBAAC,EAAD,CAAUiD,YAAasC,EAAMtC,cAAkB,kBAAC,EAAD,Q,YCD9D,IAMMvC,EAAqB,CACzBL,cAGaS,eAVS,SAAC+D,GACvB,MAAO,CACLW,aAAcX,EAAMY,SAQgB/E,EAAzBI,EArBf,SAAoByE,GAClB,OACE,yBAAKjH,UAAU,eACb,4BAAQA,UAAU,mBAAmB4B,QAASqF,EAAMlF,YAClD,0BAAM/B,UAAU,mBAAhB,oBAEF,uBAAGA,UAAU,uBAAb,mB,MCiIN,IAIMoH,EAAoB,CACxBvF,aAGaW,eARS,SAAC+D,GACvB,MAAO,CAAEc,UAAWd,EAAMe,SAOYF,EAAzB5E,EA/If,SAAuByE,GAAQ,IAAD,EACN1G,mBAAS,GADH,mBACrBgH,EADqB,KAChBC,EADgB,OAEUjH,mBACpC,iCAH0B,mBAErBkH,EAFqB,KAERC,EAFQ,OAKEnH,oBAAS,GALX,mBAKrBoH,EALqB,KAKXC,EALW,KAMxBC,EAAYC,iBAAO,IANK,EAOUvH,mBAAS,IAPnB,mBAOrBwH,EAPqB,KAORC,EAPQ,OAQMzH,mBAAS,IARf,mBAQrB0H,EARqB,KAQVC,EARU,KAU5B1B,qBAAU,WACR,IAAM2B,EAAQ,IAAI3H,KAClBqH,EAAUtC,QAAV,UAAuB4C,EACpBC,WACA/E,WACAC,SAAS,EAAG,KAHf,YAGuB6E,EAAME,gBAC5B,IAEH7B,qBAAU,WACR,IAAKmB,EAAU,CAEb,GADkB,QACdJ,EAEF,YADAe,IAGF,IAAMC,EAAWC,aAAY,WAC3BhB,GAAO,SAACD,GAAD,OAASA,EAAM,OACrB,KACH,OAAO,kBAAMkB,cAAcF,OAE5B,CAACZ,EAAUJ,IAEd,IAAMmB,EAAMnB,EAAM,GACZoB,GAAcpB,EAAM,IAAIlE,WAAWC,SAAS,EAAG,KAC/CsF,EAAazF,KAAKC,MAAMsF,EAAM,IACjCrF,WACAC,SAAS,EAAG,KACTuF,EAAc1F,KAAKC,MAAMsF,EAAM,IAYrC,SAASJ,IACPV,GAAU,GACVF,EAAe,IACf,IAAMoB,EAMR,WACE,IAAIC,EAAUlB,EAAUtC,QAAQX,MAAM,KADjB,cAEHmE,EAFG,GAEhBC,EAFgB,KAEVN,EAFU,KAGrBM,GAAQA,IAAQH,GAChBH,GAAOA,IAAOE,IACH,KACTI,GAAQ7F,KAAKC,MAAMsF,EAAM,IACzBA,GAAO,IAET,MAAM,GAAN,OAAUM,EAAK3F,WAAWC,SAAS,EAAG,KAAtC,YAA8CoF,GAf9BO,GAChBhC,EAAMpF,YACNoF,EAAMiC,kBAAkBnB,EAAaE,GACrChB,EAAMkC,QAAQtB,EAAUtC,QAASuD,GAuBnC,OACE,yBAAK9I,UAAU,kBACb,uBAAGA,UAAU,iCACX,2BACEA,UAAU,wCACVoJ,QAAQ,gBAFV,oBAMA,2BACEtH,KAAK,OACL9B,UAAU,wBACVuC,GAAG,eACHI,KAAK,eACL0G,YAAY,mBACZ1F,aAAcoE,EACdnH,SAxBR,SAA6BiD,GAC3BmE,EAAenE,EAAEE,OAAOpD,QAwBlBuD,aAAa,SAGjB,uBAAGlE,UAAU,iCACX,2BACEA,UAAU,yCACVoJ,QAAQ,cAFV,aAMA,2BACEtH,KAAK,OACL9B,UAAU,wBACVuC,GAAG,aACHI,KAAK,aACL0G,YAAY,YACZ1F,aAAcsE,EACdrH,SAtCR,SAA2BiD,GACzBqE,EAAarE,EAAEE,OAAOpD,QAsChBuD,aAAa,SAGjB,0BAAMlE,UAAU,yBAAhB,WAA6C6I,EAA7C,YAA4DD,EAA5D,YAA0ED,IAC1E,yBAAK3I,UAAU,+BACb,4BACEA,UAAU,+CACV4B,QAAS0G,GAET,0BAAMtI,UAAU,mBAAhB,SAEF,4BACEA,UAAS,wDAAmDyH,GAC5D7F,QAvFR,WACM6F,GACFC,EAAe,IACfE,GAAU,KAEVF,EAAe,iCACfE,GAAU,MAmFN,0BAAM5H,UAAU,mBAAhB,eCrGV,IAMewC,eANS,SAAC+D,GACvB,MAAO,CACL+C,aAAc/C,EAAMY,SAIgB,KAAzB3E,EA/Bf,SAAsByE,GACpB,OACE,6BAASjH,UAAU,iBACjB,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,wBAAd,iBACA,4BAAQA,UAAU,0BAChB,0BAAMA,UAAU,mBAAhB,WACA,0BAAMA,UAAU,0BAElB,yBAAKA,UAAU,+BACb,kBAAC,EAAD,QAGHiH,EAAMqC,aACL,kBAAC,EAAD,CACEJ,kBAAmBjC,EAAMiC,kBACzBC,QAASlC,EAAMkC,UAGjB,kBAAC,EAAD,U,kBCFOI,MArBf,YAA2B,IACrBC,EADWC,EAAS,EAATA,MAEf,OAAQA,EAAMxH,QACZ,IAAK,YACHuH,EAAQ,YACR,MACF,IAAK,SACHA,EAAQ,SACR,MACF,QACEA,EAAQ,WAGZ,OACE,wBAAIxJ,UAAS,sBAAiBwJ,IAC5B,wBAAIxJ,UAAU,eAAeyJ,EAAM9G,MACnC,uBAAG3C,UAAU,eAAeyJ,EAAMjG,QCLzBkG,MAVf,SAAmBzC,GACjB,OACE,wBAAIjH,UAAU,cACXiH,EAAM0C,UAAUtF,KAAI,SAACoF,GAAD,OACnB,kBAAC,EAAD,CAAO3F,IAAK2F,EAAMlH,GAAIkH,MAAOA,SC4CrC,IAMMrC,EAAoB,CACxBwC,WfmBK,WACL,MAAO,CACL9H,KCvEuB,iBcqDZU,eAVS,SAAC+D,GACvB,MAAO,CACLsD,KAAMtD,EAAMsD,QAQwBzC,EAAzB5E,EAxDf,YAA2C,IAArBoH,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,KAqBhC,OACE,6BAAS7J,UAAU,eACjB,yBAAKA,UAAU,8BACb,wBAAIA,UAAU,sBAAd,wBACA,2BACEuC,GAAG,eACHvC,UAAU,wCACV8B,KAAK,WACLa,KAAK,gBACLmH,iBAAkBD,IAEpB,2BACET,QAAQ,eACRpJ,UAAU,qBACV4B,QAlBR,WACEgI,OAmBI,4BAAQ5J,UAAU,yBAChB,0BAAMA,UAAU,mBAAhB,mBAGH6J,EAAO,kBAAC,EAAD,CAAWF,UAxCL,CAChB,CACEpH,GAAI,EACJI,KAAM,gBACNa,KAAM,qBACNvB,OAAQ,aAEV,CACEM,GAAI,EACJI,KAAM,mBACNa,KAAM,qBACNvB,OAAQ,UAEV,CAAEM,GAAI,EAAGI,KAAM,aAAca,KAAM,qBAAiBvB,OAAQ,eA2BZ,SC3BrC8H,MAdf,SAAc9C,GACZ,OACE,0BAAMjH,UAAU,aACd,wBAAIA,UAAU,mBAAd,gBACA,kBAAC,EAAD,CAAY2E,YAAasC,EAAMtC,cAC/B,kBAAC,EAAD,CACEuE,kBAAmBjC,EAAMiC,kBACzBC,QAASlC,EAAMkC,UAEjB,kBAAC,EAAD,Q,sBC4DC,SAASa,EAAT,GAIH,IAAD,IAHDC,OAAU1H,EAGT,EAHSA,GAAI5B,EAGb,EAHaA,MAAO8E,EAGpB,EAHoBA,QACrByE,EAEC,EAFDA,eACAjH,EACC,EADDA,aAEA,OACE,uCACE+C,MAAO,CACLmE,KAAK,GAAD,OAAK1E,EAAL,KACJ2E,SAAU,WACVC,YAAa,GACbC,WAAY,EACZC,OAAQ,EACR7D,OAAQ,UACR8C,MAAO,UAEP7D,MAAO,GACP6E,OAAQ,GACR5E,gBAAiB,UACjB6E,aAAc,MACdC,OAAQ,oBACRC,UAAW,2CAETT,EAAe3H,IAEnB,yBAAKvC,UAAU,gBAAgBiD,EAAatC,KAKlD,SAASiK,EAAT,GAOI,IANFC,EAMC,EANDA,OACA9G,EAKC,EALDA,OACA+G,EAIC,EAJDA,cACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACAC,EACC,EADDA,OAQA,OANAzE,qBAAU,WACRuE,EAAWxF,QAAUsF,EAAOlK,MAC5BqK,EAASzF,QAAUxB,EAAOpD,MAC1BsK,EAAOF,EAAWxF,QAASyF,EAASzF,YAIpC,uCACES,MAAO,CACLoE,SAAU,WACVI,OAAQ,GACRD,OAAQ,EACRE,aAAc,EACd/D,OAAQ,UACRyD,KAAK,GAAD,OAAKU,EAAOpF,QAAZ,KACJE,MAAM,GAAD,OAAK5B,EAAO0B,QAAUoF,EAAOpF,QAA7B,KAELG,gBAAiB,UACjB+E,UAAW,4CAETG,MAKKI,MArIf,YAAgD,IAA/BrD,EAA8B,EAA9BA,UAAWiB,EAAmB,EAAnBA,QAASmC,EAAU,EAAVA,OAC/BF,EAAajD,mBACbkD,EAAWlD,mBAIf,SAAS7E,EAAatC,GACpB,IAAIuC,EAAQC,KAAKC,MAAMzC,EAAQ,IAC5B0C,WACAC,SAAS,EAAG,KACXC,GAAW5C,EAAgB,GAARuC,GAAYG,WAAWC,SAAS,EAAG,KAC1D,MAAM,GAAN,OAAUJ,EAAV,YAAmBK,GAGrB,SAAS4H,EAAa3H,GACpB,IAAI4H,GAAU5H,EAAK6H,MAAM,GACzB,OAAwB,GAAjBC,SAAS9H,GAAa4H,EAG/B,IAAIG,EAAeJ,EAAatD,GAC5B2D,EAAaL,EAAarC,GAE9B,OACE,kBAAC,IAAD,CACE9I,UAAU,cACVyL,OAAQ,CAtBI,IACA,MAsBZC,KAAM,EACNC,KAAM,EACNC,OAAQ,EAAEL,GAAeC,IAEzB,kBAAC,IAAD,MACG,gBAAGK,EAAH,EAAGA,aAAH,OACC,uCAAK7L,UAAU,aAAgB6L,SAGnC,kBAAC,IAAD,MACG,gBAAGC,EAAH,EAAGA,QAAS5B,EAAZ,EAAYA,eAAZ,OACC,yBAAKlK,UAAU,kBACZ8L,EAAQzH,KAAI,SAAC4F,GAAD,OACX,kBAACD,EAAD,CACElG,IAAKmG,EAAO1H,GACZ0H,OAAQA,EACRC,eAAgBA,EAChBjH,aAAcA,WAMxB,kBAAC,IAAD,CAAQkH,MAAM,EAAO4B,OAAO,IACzB,gBAAGC,EAAH,EAAGA,OAAQlB,EAAX,EAAWA,cAAX,OACC,yBAAK9K,UAAU,iBACZgM,EAAO3H,KAAI,gBAAG9B,EAAH,EAAGA,GAAIsI,EAAP,EAAOA,OAAQ9G,EAAf,EAAeA,OAAf,OACV,kBAAC6G,EAAD,CACE9G,IAAKvB,EACLsI,OAAQA,EACR9G,OAAQA,EACR+G,cAAeA,EACfC,WAAYA,EACZC,SAAUA,EACVC,OAAQA,aCgGxB,IASM7D,EAAoB,CACxBvF,YACAE,aACAC,mBACAiK,gBlBvHK,SAAyB3J,GAC9B,MAAO,CACLR,KCnDyB,gBDoDzBI,QAASI,KkBuHEE,eAhBS,SAAC+D,GACvB,MAAO,CACLjE,IAAKiE,EAAMjE,IACX4J,OAAQ3F,EAAMe,MACdJ,aAAcX,EAAMY,MACpBgF,mBAAoB5F,EAAM6F,gBAWUhF,EAAzB5E,EAvKf,SAAyByE,GAAQ,IAAD,EACQ1G,mBAAS0G,EAAMc,aADvB,mBACvBA,EADuB,KACVC,EADU,OAEIzH,mBAAS0G,EAAMgB,WAFnB,mBAEvBA,EAFuB,KAEZC,EAFY,OAGI3H,mBAAS,IAHb,mBAGvB8L,EAHuB,KAGZC,EAHY,KAIxBnE,EAAQ7G,MAASC,OAAO,cAJA,EAKJhB,mBAAS,GALL,mBAKvBgM,EALuB,KAKhBC,EALgB,OAMRjM,mBAAS,GAND,mBAMvBkM,EANuB,KAMlBC,EANkB,KAgD9B,SAAS5G,EAAkBC,GACzB,IAAM4G,EAAgB,CACpB1K,OAAQ,UACR8D,QAASA,GAEXkB,EAAMjF,iBAAiB2K,GACvB1F,EAAMtC,cAiCR,OACE,yBAAK3E,UAAU,WACb,6BAASA,UAAU,qBACjB,wBAAIA,UAAU,4BAAd,eACA,0BACEA,UAAU,0BACV4M,OAAO,OACPC,SAjFR,SAAuBhJ,GACrBA,EAAEiJ,iBACF,IAAMC,EAeR,WACE,IAAIV,EAAY,GAEXtE,EAIHuE,EADAD,EAAY,IAFZA,EAAY,6BAMd,GAAIA,EAEF,OADAC,EAAaD,IACN,EAGT,OAAO,EA9BSW,GACZT,IAAUE,EACZ3G,EAAkB,qCACRiH,GAGVT,EAAa,IAoCjB,WACE,IAOMhK,EAIR,SAAkBQ,EAASqF,GACzB,IAAM7F,EAAM2E,EAAM3E,IAMlB,OALAqE,OAAOsG,KAAK3K,GAAK+B,KAAI,SAACP,GAChBA,IAAQqE,IACV7F,EAAIwB,GAAOxB,EAAIwB,GAAKoJ,OAAOpK,OAGxBR,EAXK6K,CAPO,CACjBxK,KAAMoF,EACNlF,MAAOoF,EACPvE,QAAS6I,EACT9I,MAAOgJ,EACPxK,OAAQ,IAEuBkG,GACjClB,EAAMgF,gBAAgB3J,GA5CpB8K,GACAnG,EAAMoG,cACNpG,EAAMjF,iBAAiB,IACvBiF,EAAMlF,aACNkF,EAAMpF,aAPNiE,EAAkB,qCA6Ed,yBAAK9F,UAAU,6BACb,kBAAC,EAAD,CACE6H,UAAWZ,EAAMY,UACjBiB,QAAS7B,EAAM6B,QACfmC,OA5FZ,SAAgBsB,EAAOE,GACrBD,EAASD,GACTG,EAAOD,OA6FD,uBAAGzM,UAAU,oCACX,2BAAOA,UAAU,2BAA2BoJ,QAAQ,WAApD,kBAGA,2BACEpJ,UAAU,2BACVuC,GAAG,UACHI,KAAK,UACL0G,YAAY,yBACZ1F,aAAcoE,EACdnH,SAlCZ,SAA6BiD,GAC3BmE,EAAenE,EAAEE,OAAOpD,QAkCduD,aAAa,QAEf,0BAAMlE,UAAU,cAAcqM,IAGhC,uBAAGrM,UAAU,oCACX,2BAAOA,UAAU,2BAA2BoJ,QAAQ,SAApD,SAGA,2BACEpJ,UAAU,2BACVuC,GAAG,QACHI,KAAK,QACL0G,YAAY,uBACZ1F,aAAcsE,EACdrH,SA9CZ,SAA2BiD,GACzBqE,EAAarE,EAAEE,OAAOpD,QA8CZuD,aAAa,SAGjB,yBAAKlE,UAAU,kCACb,4BAAQA,UAAU,6BAChB,0BAAMA,UAAU,mBAAhB,SAEF,4BACE8B,KAAK,SACL9B,UAAU,2BACV4B,QAASqF,EAAMpF,WAEf,0BAAM7B,UAAU,mBAAhB,iB,cChGd,IAMMoH,GAAoB,CACxBpF,oBAGaQ,gBAVS,SAAC+D,GACvB,MAAO,CACL4F,mBAAoB5F,EAAM6F,gBAQUhF,GAAzB5E,EA5Df,SAAsByE,GACpB,IAIIuC,EAEJ,OAAQvC,EAAMkF,mBAAmBlK,QAC/B,IAAK,UACHuH,EAAQ,CAAE5D,gBARE,WASZ,MACF,IAAK,OACH4D,EAAQ,CAAE5D,gBAVD,WAWT,MACF,IAAK,QACH4D,EAAQ,CAAE5D,gBAZA,WAaV,MACF,QACE4D,EAAQ,CAAE5D,gBAAiB,eAG/B,OACE,kBAAC0H,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,QAAS,CAAEC,KAAM,gBACjBC,KAAM3G,EAAM2G,KACZC,iBAAkB,IAClBC,QAAS7G,EAAMoG,YACfU,OACE,kBAAC,IAAMC,SAAP,KACE,wBAAIhO,UAAU,mBAAd,wBACA,yBAAKA,UAAU,gCACb,0BAAMA,UAAU,uBAAuBgG,MAAOwD,IAC9C,4BACExJ,UAAU,0BACV4B,QAASqF,EAAMoG,eAGnB,uBAAGrN,UAAU,yBACViH,EAAMkF,mBAAmBpG,eCYtC,IAIevD,gBAJS,SAAC+D,GACvB,MAAO,CAAE0H,eAAgB1H,EAAMe,SAGO,KAAzB9E,EAxDf,SAAayE,GAAQ,IAAD,EACoB1G,mBAAS,IAD7B,mBACXwH,EADW,KACEC,EADF,OAEgBzH,mBAAS,IAFzB,mBAEX0H,EAFW,KAEAC,EAFA,OAGgB3H,mBAAS,IAHzB,mBAGXsH,EAHW,KAGAqG,EAHA,OAIY3N,mBAAS,IAJrB,mBAIXuI,EAJW,KAIFqF,EAJE,OAMMjO,IAAMK,UAAS,GANrB,mBAMXqN,EANW,KAMLQ,EANK,KAkBZzJ,EAAc,WAClByJ,GAAQ,IAGJf,EAAc,SAAC5D,EAAO4E,GACX,cAAXA,GAGJD,GAAQ,IAGV,OACE,yBAAKpO,UAAU,oBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEkJ,kBAzBN,SAA2BnB,EAAaE,GACtCD,EAAeD,GACfG,EAAaD,IAwBTkB,QArBN,SAAiBtB,EAAWiB,GAC1BoF,EAAarG,GACbsG,EAAWrF,IAoBPnE,YAAaA,IAEdsC,EAAMgH,eACL,kBAAC,EAAD,CACElG,YAAaA,EACbE,UAAWA,EACXJ,UAAWA,EACXiB,QAASA,EACTnE,YAAaA,EACb0I,YAAaA,IAEb,KACJ,kBAAC,GAAD,CAAcO,KAAMA,EAAMP,YAAaA,QC3CzBiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gDCTAC,GAAe,CACnB,aAAc,ICRVA,GAAe,GCKRC,GAAcC,2BAAgB,CACzCvH,MCJ8B,WAAmC,IAAlCf,EAAiC,wDAAXwH,EAAW,uCAChE,OAAQA,EAAOjM,MACb,IxBNsB,awBOpB,OAAiByE,EACnB,QACE,OAAOA,IDAXY,MEL+B,WAAmC,IAAlCZ,EAAiC,wDAAXwH,EAAW,uCACjE,OAAQA,EAAOjM,MACb,IzBLuB,cyBMrB,OAAiByE,EACnB,QACE,OAAOA,IFCX6F,aDNiC,WAAmC,IAAlC7F,EAAiC,uDAAzBoI,GAAcZ,EAAW,uCACnE,OAAQA,EAAOjM,MACb,ItBF6B,oBsBG3B,OAAgBiM,EAAO7L,QACzB,QACE,OAAOqE,ICEXjE,IFEwB,WAAmC,IAAlCiE,EAAiC,uDAAzBoI,GAAcZ,EAAW,uCAC1D,OAAQA,EAAOjM,MACb,IrBVsB,aqBWpB,OAAOyE,EAAMuI,eAAef,EAAOjK,KAA5B,gBACEyC,GADF,6BAEAwH,EAAOjK,IAAM,IAAOyC,GAC7B,IrBbyB,gBqBcvB,OAAO,6BAAKwH,EAAO7L,SAAYqE,GACjC,IrBlBwB,eqBmBtB,OAAO,6BACFA,GADL,mBAEGwH,EAAOzL,IAAMiE,EAAMwH,EAAOzL,KAAK+B,KAAI,SAACvB,EAASP,GAC5C,OAAOA,IAAOwL,EAAO7L,QAAQK,GACzBO,EADG,6BAGEA,GAHF,IAIDD,MAAOkL,EAAO7L,QAAQW,MACtBZ,OAAQ8L,EAAO7L,QAAQD,cAKnC,IrBjCuB,cqBkCrB,OAAO,6BACFsE,GADL,mBAEGwH,EAAOzL,IAAMiE,EAAMwH,EAAOzL,KAAK+B,KAAI,SAACvB,EAASP,GAC5C,OAAOA,IAAOwL,EAAO7L,QAAQK,GACzBO,EADG,6BAGEA,GAHF,IAIDH,KAAMoL,EAAO7L,QAAQS,KACrBV,OAAQ8L,EAAO7L,QAAQD,cAKnC,IrB1C0B,iBqB2CxB,OAAO,6BACFsE,GADL,mBAEGwH,EAAOzL,IAFV,uBAGOiE,EAAMwH,EAAOzL,KAAK+I,MAAM,EAAG0C,EAAO7L,UAHzC,aAIOqE,EAAMwH,EAAOzL,KAAK+I,MAAM0C,EAAO7L,QAAU,OAIlD,IrBlD4B,mBqBmD1B,OAAO,6BACFqE,GADL,mBAEGwH,EAAOzL,IAAMiE,EAAMwH,EAAOzL,KAAK+B,KAAI,SAACvB,EAASP,GAC5C,OAAO,6BACFO,GADL,IAEEb,OAAQ8L,EAAOxJ,SAAShC,UAKhC,QACE,OAAOgE,IE1DXsD,KGRyB,WAAmC,IAAlCtD,EAAiC,wDAAXwH,EAAW,uCAC3D,OAAQA,EAAOjM,MACb,I1BGuB,c0BFrB,OAAiByE,EACnB,QACE,OAAOA,M,SCsBb,IAAMwI,GAXN,WACE,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EAA0B,OAC9B,OAAOG,KAAKC,MAAMJ,GAClB,MAAOnL,GAEP,YADAwL,QAAQC,IAAIzL,IAKO0L,GAEjBC,GAAQC,uBACZb,GACAG,GACAW,+BAAoBC,2BAAgBC,QAGtCJ,GAAMK,WAAU,kBA5BhB,SAA4BtJ,GAC1B,IACE,IAAMyI,EAAkBG,KAAKW,UAAUvJ,GACvC0I,aAAac,QAAQ,QAASf,GAC9B,MAAOnL,GACPwL,QAAQC,IAAIzL,IAuBMmM,CAAmBR,GAAMS,eAE/CC,IAASC,OACP,kBAAC,IAAD,CAAUX,MAAOA,IACf,kBAAC,GAAD,OAEFY,SAASC,eAAe,SPsFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxB,QAAQwB,MAAMA,EAAM9K,e","file":"static/js/main.58317119.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Nav.scss\";\r\n\r\nclass Nav extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"nav__list\">\r\n        <li className=\"nav__item nav__item_active\">\r\n          <a href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav__item\">\r\n          <a href=\"#\">Issues</a>\r\n        </li>\r\n        <li className=\"nav__item\">\r\n          <a href=\"#\">Filer</a>\r\n        </li>\r\n        <li className=\"nav__item\">\r\n          <a href=\"#\">Projects</a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./UserMenu.scss\";\r\n\r\nclass UserMenu extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"user-list\">\r\n        <li className=\"user-list__item user-list__item_settings\">\r\n          <a className=\"user-list__link\" href=\"#\">\r\n            <span className=\"visually-hidden\">Settings</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"user-list__item user-list__item_info\">\r\n          <a className=\"user-list__link\" href=\"#\">\r\n            <span className=\"visually-hidden\">Information</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"user-list__item user-list__item_exit\">\r\n          <a className=\"user-list__link\" href=\"#\">\r\n            <span className=\"visually-hidden\">Log out</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"user-list__item user-list__item_profile\">\r\n          <a className=\"user-list__link user-list__link_profile\" href=\"#\">\r\n            <span className=\"visually-hidden\">Your profile</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserMenu;\r\n","import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport Nav from \"./Nav\";\r\nimport UserMenu from \"./UserMenu\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-wrapper\">\r\n          <Nav />\r\n          <UserMenu />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"./Calendar.scss\";\r\n\r\nfunction ReactCalendar() {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  function onChange(date) {\r\n    setDate(date);\r\n  }\r\n\r\n  return (\r\n    <Calendar\r\n      value={date}\r\n      onChange={onChange}\r\n      locale=\"EN\"\r\n      calendarType=\"US\"\r\n      minDetail={\"month\"}\r\n      formatShortWeekday={(locale, date) =>\r\n        [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"][date.getDay()]\r\n      }\r\n      formatMonthYear={(locale, date) =>\r\n        [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ][date.getMonth()]\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ReactCalendar;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport ReactCalendar from \"./Calendar\";\r\nimport \"./CalendarButton.scss\";\r\n\r\nfunction CalendarButton() {\r\n  const todayDate = moment().format(\"DD MMMM YYYY\");\r\n  return (\r\n    <div className=\"day-list__calendar-wrapper\">\r\n      <button className=\"heading-btn days-list__calendar\">{todayDate}</button>\r\n      <ReactCalendar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarButton;\r\n","import React, { useState } from \"react\";\r\nimport \"./MainScreenHeading.scss\";\r\nimport CalendarButton from \"./CalendarButton\";\r\n\r\nfunction MainScreenHeading({ setFilter }) {\r\n  const [isAll, setAll] = useState(true);\r\n\r\n  function clickToAll() {\r\n    setAll(true);\r\n    setFilter(true);\r\n  }\r\n\r\n  function clickToFavorite() {\r\n    setAll(false);\r\n    setFilter(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"days-list__heading\">\r\n      <CalendarButton />\r\n      <button\r\n        className={`heading-btn day__filter day__filter_margin ${\r\n          !isAll ? \"\" : \"day__filter_active\"\r\n        }`}\r\n        onClick={clickToAll}\r\n      >\r\n        All\r\n      </button>\r\n      <button\r\n        className={`heading-btn day__filter ${\r\n          isAll ? \"\" : \"day__filter_active\"\r\n        }`}\r\n        onClick={clickToFavorite}\r\n      >\r\n        Favorites\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainScreenHeading;\r\n","import {\r\n  OPEN_NOTIFICATION,\r\n  OPEN_POPUP,\r\n  START_TIMER,\r\n  CHANGE_NAME,\r\n  CHANGE_ISSUE,\r\n  CREATE_DAY,\r\n  UPDATE_OF_DAY,\r\n  DELETE_WORKLOG,\r\n  SET_ALL_STATUSES,\r\n  ENABLE_SYNC,\r\n} from \"./types\";\r\n\r\nexport function openPopup() {\r\n  return {\r\n    type: OPEN_POPUP,\r\n  };\r\n}\r\n\r\nexport function startTimer() {\r\n  return {\r\n    type: START_TIMER,\r\n  };\r\n}\r\n\r\nexport function changeName(name, day) {\r\n  return {\r\n    type: CHANGE_NAME,\r\n    payload: name,\r\n    day,\r\n  };\r\n}\r\n\r\nexport function changeIssue(issue, day) {\r\n  return {\r\n    type: CHANGE_ISSUE,\r\n    payload: issue,\r\n    day,\r\n  };\r\n}\r\n\r\nexport function openNotification(status) {\r\n  return {\r\n    type: OPEN_NOTIFICATION,\r\n    payload: status,\r\n  };\r\n}\r\n\r\nexport function createDay(key) {\r\n  return {\r\n    type: CREATE_DAY,\r\n    key,\r\n  };\r\n}\r\n\r\nexport function addWorklogInDay(day) {\r\n  return {\r\n    type: UPDATE_OF_DAY,\r\n    payload: day,\r\n  };\r\n}\r\n\r\nexport function deleteWorklog(day, id) {\r\n  return {\r\n    type: DELETE_WORKLOG,\r\n    day,\r\n    payload: id,\r\n  };\r\n}\r\n\r\nexport function setAllStatuses(statuses, day) {\r\n  return {\r\n    type: SET_ALL_STATUSES,\r\n    day,\r\n    statuses,\r\n  };\r\n}\r\n\r\nexport function enableSync() {\r\n  return {\r\n    type: ENABLE_SYNC,\r\n  };\r\n}\r\n","export const OPEN_POPUP = \"OPEN_POPUP\";\r\nexport const START_TIMER = \"START_TIMER\";\r\nexport const CHANGE_NAME = \"CHANGE_NAME\";\r\nexport const CHANGE_ISSUE = \"CHANGE_ISSUE\";\r\nexport const OPEN_NOTIFICATION = \"OPEN_NOTIFICATION\";\r\nexport const CREATE_DAY = \"CREATE_DAY\";\r\nexport const UPDATE_OF_DAY = \"UPDATE_OF_DAY\";\r\nexport const DELETE_WORKLOG = \"DELETE_WORKLOG\";\r\nexport const SET_ALL_STATUSES = \"SET_ALL_STATUSES\";\r\nexport const ENABLE_SYNC = \"ENABLE_SYNC\";\r\n","import React from \"react\";\r\nimport \"./TimePicker.scss\";\r\n\r\nfunction TimePicker() {\r\n  return (\r\n    <div className=\"time-picker\">\r\n      <div className=\"time-picher__range\"></div>\r\n      <ul className=\"time-picher__time-list\">\r\n        <li>07:00</li>\r\n        <li>08:00</li>\r\n        <li>09:00</li>\r\n        <li>10:00</li>\r\n        <li>11:00</li>\r\n        <li>12:00</li>\r\n        <li>13:00</li>\r\n        <li>14:00</li>\r\n        <li>15:00</li>\r\n        <li>16:00</li>\r\n        <li>17:00</li>\r\n        <li>18:00</li>\r\n        <li>19:00</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimePicker;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteWorklog } from \"../redux/actions\";\r\nimport \"./WorklogOptions.scss\";\r\n\r\nfunction WorklogOptions({ date, index, deleteWorklog }) {\r\n  return (\r\n    <ul className=\"worklog-options\">\r\n      <li className=\"worklog-options__item\">\r\n        <button className=\"worklog-options__btn\">Jira link</button>\r\n      </li>\r\n      <li className=\"worklog-options__item\">\r\n        <button className=\"worklog-options__btn\">Duplicate</button>\r\n      </li>\r\n      <li className=\"worklog-options__item\">\r\n        <button className=\"worklog-options__btn\">Add to favorite</button>\r\n      </li>\r\n      <li className=\"worklog-options__item\">\r\n        <button\r\n          className=\"worklog-options__btn\"\r\n          onClick={() => deleteWorklog(date, index)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  deleteWorklog,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(WorklogOptions);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeName } from \"../redux/actions\";\r\nimport { changeIssue } from \"../redux/actions\";\r\nimport \"./Worklog.scss\";\r\nimport WorklogOptions from \"../WorklogOptions/WorklogOptions\";\r\n\r\nfunction Worklog({ date, worklog, index, changeName, changeIssue }) {\r\n  const [isClick, setClick] = useState(false);\r\n\r\n  function minuteToHour(value) {\r\n    let hours = Math.floor(value / 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    let minutes = (value - hours * 60).toString().padStart(2, \"0\");\r\n    return `${hours}:${minutes}`;\r\n  }\r\n  const time = worklog.ended - worklog.started;\r\n\r\n  function handleChangeWorklog(e) {\r\n    setClick(true);\r\n  }\r\n\r\n  function saveName(e) {\r\n    let name;\r\n    if (e.key === \"Enter\") {\r\n      if (e.target.tagName.toUpperCase() === \"INPUT\") {\r\n        if (e.target.value === \"\") {\r\n          name = worklog.name;\r\n        } else {\r\n          name = e.target.value;\r\n        }\r\n        setClick(false);\r\n        const newName = {\r\n          id: index,\r\n          name: name,\r\n          status: \"\",\r\n        };\r\n        changeName(newName, date);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleChangeIssue(e) {\r\n    setClick(true);\r\n  }\r\n\r\n  function saveIssue(e) {\r\n    if (e.key === \"Enter\") {\r\n      if (e.target.tagName.toUpperCase() === \"INPUT\") {\r\n        let issue = e.target.value;\r\n        setClick(false);\r\n        const newIssue = {\r\n          id: index,\r\n          issue: issue,\r\n          status: \"\",\r\n        };\r\n        changeIssue(newIssue, date);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className=\"worklog__wrapper\">\r\n      <div className=\"worklog\">\r\n        <p className=\"worklog__interval-time\">\r\n          {minuteToHour(worklog.started)}\r\n          <span className=\"worklog__interval-time_gray\">\r\n            {\" \"}\r\n            — {minuteToHour(worklog.ended)}\r\n          </span>\r\n        </p>\r\n        <span\r\n          className={`worklog__status worklog__status_${worklog.status}`}\r\n        ></span>\r\n        <div className=\"worklog__name-wrapper\">\r\n          {isClick ? (\r\n            <input\r\n              className=\"worklog__code-issue\"\r\n              name=\"issue-name\"\r\n              defaultValue={worklog.issue}\r\n              onKeyPress={saveIssue}\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            <span className=\"worklog__code-issue\" onClick={handleChangeIssue}>\r\n              {worklog.issue}\r\n            </span>\r\n          )}\r\n          {isClick ? (\r\n            <input\r\n              className=\"worklog__name\"\r\n              name=\"worklog-name\"\r\n              defaultValue={worklog.name}\r\n              onKeyPress={saveName}\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            <p className=\"worklog__name\" onClick={handleChangeWorklog}>\r\n              {worklog.name}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <span className=\"worklog__time\">{`${minuteToHour(time)}:00`}</span>\r\n        <button className=\"worklog__btn\">\r\n          <span className=\"visually-hidden\">Play</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"worklog__on-hover\">\r\n        <button className=\"worklog__options-btn\">\r\n          <span className=\"worklog__btn-round\"></span>\r\n        </button>\r\n      </div>\r\n      <div className=\"worklog__menu-wrapper\">\r\n        <WorklogOptions date={date} index={index} />\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeName,\r\n  changeIssue,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Worklog);\r\n","import React from \"react\";\r\nimport \"./WorklogList.scss\";\r\nimport Worklog from \"./Worklog\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction WorklogList({ worklogs, date }) {\r\n  return (\r\n    <ul className=\"worklogs-list\">\r\n      {worklogs.map((worklog, index) => (\r\n        <Worklog worklog={worklog} key={index} index={index} date={date} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nexport default connect(null, null)(WorklogList);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./Day.scss\";\r\nimport TimePicker from \"./TimePicker\";\r\nimport WorklogList from \"../Worklog/WorklogList\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAllStatuses } from \"../redux/actions\";\r\nimport { openNotification } from \"../redux/actions\";\r\n\r\nfunction Day({\r\n  day,\r\n  displayNone,\r\n  isDisable,\r\n  disableClass,\r\n  setAllStatuses,\r\n  openNotification,\r\n  handleClick,\r\n}) {\r\n  const date = moment(day[0], \"YYYY-MM-DD\").format(\"ddd MMMM DD\").split(\" \");\r\n  const [dayOfWeek, month, dayOfMonth] = date;\r\n\r\n  function minuteToHour(value) {\r\n    let hours = Math.floor(value / 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    let minutes = (value - hours * 60).toString().padStart(2, \"0\");\r\n    if (hours >= \"08\") return `08:00`;\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  function getTimes() {\r\n    let times = [];\r\n    day[1].map((item) => {\r\n      let time = item.ended - item.started;\r\n      times.push(time);\r\n    });\r\n    return times;\r\n  }\r\n\r\n  const times = getTimes();\r\n  let timesSum = times.reduce((sum, current) => sum + current, 0);\r\n  let totalTime = minuteToHour(timesSum);\r\n\r\n  function countPercent() {\r\n    let percent = Math.trunc((timesSum * 100) / 480);\r\n    if (percent >= 100) {\r\n      return { width: `100%`, backgroundColor: \"#62d2b1\" };\r\n    } else {\r\n      return { width: `${percent}%` };\r\n    }\r\n  }\r\n  let percent = countPercent();\r\n\r\n  function setStatus() {\r\n    const correctIssues = [\"JRM-310\", \"JRM-311\", \"JRM-312\", \"JRM-313\"];\r\n    const statuses = [];\r\n    day[1].forEach((item) => {\r\n      if (item.issue === \"\") {\r\n        statuses.push(\"warning\");\r\n        showWarningStatus(\r\n          \"warning\",\r\n          \"Nothing to log. Please check issues assignment or description.\"\r\n        );\r\n      } else if (!correctIssues.includes(item.issue)) {\r\n        statuses.push(\"error\");\r\n        showWarningStatus(\"error\", \"Issue does not exist.\");\r\n      } else {\r\n        statuses.push(\"done\");\r\n      }\r\n    });\r\n    const isAllItemsDone = statuses.every((item) => {\r\n      return item === \"done\";\r\n    });\r\n\r\n    if (isAllItemsDone) {\r\n      showWarningStatus(\"done\", \"Your worklog successfully logged.\");\r\n    }\r\n    setAllStatuses(statuses, day[0]);\r\n  }\r\n\r\n  function showWarningStatus(status, message) {\r\n    const warningStatus = {\r\n      status: status,\r\n      message: message,\r\n    };\r\n    openNotification(warningStatus);\r\n    handleClick();\r\n  }\r\n\r\n  return (\r\n    <section className=\"day-list__item day\" style={displayNone}>\r\n      <div className=\"day__heading-wrapper\">\r\n        <h3 className=\"day__date\">\r\n          {dayOfWeek},{\" \"}\r\n          <span className=\"day__date_not-bold\">\r\n            {month} {dayOfMonth}\r\n          </span>\r\n        </h3>\r\n        <div className=\"day__total-time-wrapper\">\r\n          <p className=\"day__total-time\">{`${totalTime}:00`}</p>\r\n          <div className=\"day__progress-bar\">\r\n            <div className=\"day__progress-value\" style={percent}></div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"day__btn-download\"\r\n          onClick={setStatus}\r\n          disabled={isDisable}\r\n          style={disableClass}\r\n        >\r\n          <span className=\"visually-hidden\">Download</span>\r\n        </button>\r\n      </div>\r\n      <WorklogList date={day[0]} worklogs={day[1]} />\r\n      <TimePicker />\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAllStatuses,\r\n  openNotification,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Day);\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { createDay } from \"../redux/actions\";\r\nimport \"./DaysList.scss\";\r\nimport Day from \"./Day\";\r\n\r\nfunction DaysList({ createDay, day, handleClick }) {\r\n  let todayDate = moment().format(\"YYYY-MM-DD\");\r\n  useEffect(() => {\r\n    createDay(todayDate);\r\n  }, []);\r\n\r\n  let displayNone;\r\n\r\n  const isDisable = true;\r\n  const disableClass = { opacity: \"0.5\", cursor: \"auto\" };\r\n\r\n  return (\r\n    <div>\r\n      {Object.entries(day).map((day, index) => {\r\n        if (todayDate !== day[0] && day[1].length < 1) {\r\n          displayNone = { display: \"none\" };\r\n          return (\r\n            <Day\r\n              displayNone={displayNone}\r\n              day={day}\r\n              key={index}\r\n              isDisable={isDisable}\r\n              disableClass={disableClass}\r\n            />\r\n          );\r\n        } else if (todayDate !== day[0]) {\r\n          return (\r\n            <Day\r\n              day={day}\r\n              key={index}\r\n              isDisable={isDisable}\r\n              disableClass={disableClass}\r\n            />\r\n          );\r\n        } else {\r\n          return <Day day={day} key={index} handleClick={handleClick} />;\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    day: state.day,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createDay,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DaysList);\r\n","import React from \"react\";\r\nimport \"./Favorite.scss\";\r\n\r\nfunction Favorite() {\r\n  return (\r\n    <section className=\"favorite\">\r\n      <h2 className=\"visually-hidden\">Favorite issues</h2>\r\n      <p className=\"favorite__message\">There is no favorite issues yet</p>\r\n      <div className=\"favorite__btn-wrapper\">\r\n        <button className=\"favorite__btn\">\r\n          <span className=\"visually-hidden\">Add new favorite</span>\r\n        </button>\r\n        <p className=\"favorite__phrase\">new favorite</p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Favorite;\r\n","import React, { useState } from \"react\";\r\nimport \"./MainScreen.scss\";\r\nimport MainScreenHeading from \"./MainScreenHeading\";\r\nimport DaysList from \"../Day/DaysList\";\r\nimport Favorite from \"./Favorite\";\r\n\r\nfunction MainScreen(props) {\r\n  const [isAll, setAll] = useState(true);\r\n\r\n  function setFilter(isAll) {\r\n    return setAll(isAll);\r\n  }\r\n\r\n  return (\r\n    <section className=\"page-main__day-list days-list\">\r\n      <h2 className=\"visually-hidden\">Main screen</h2>\r\n      <MainScreenHeading setFilter={setFilter} />\r\n      {isAll ? <DaysList handleClick={props.handleClick} /> : <Favorite />}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","import React from \"react\";\r\nimport \"./NewWorklog.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { startTimer } from \"../redux/actions\";\r\n\r\nfunction NewWorklog(props) {\r\n  return (\r\n    <div className=\"new-worklog\">\r\n      <button className=\"new-worklog__btn\" onClick={props.startTimer}>\r\n        <span className=\"visually-hidden\">Add new worklog</span>\r\n      </button>\r\n      <p className=\"new-worklog__phrase\">NEW WORKLOG</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isStartTimer: state.timer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  startTimer,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewWorklog);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./ActiveWorklog.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { openPopup } from \"../redux/actions\";\r\n\r\nfunction ActiveWorklog(props) {\r\n  const [sec, setSec] = useState(0);\r\n  const [classButton, setClassButton] = useState(\r\n    \"active-worklog__btn-pause_run\"\r\n  );\r\n  const [isPaused, setPaused] = useState(false);\r\n  let startTime = useRef(\"\");\r\n  const [nameWorklog, setNameWorklog] = useState(\"\");\r\n  const [nameIssue, setNameIssue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const today = new Date();\r\n    startTime.current = `${today\r\n      .getHours()\r\n      .toString()\r\n      .padStart(2, \"0\")}:${today.getMinutes()}`;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isPaused) {\r\n      const fourHours = 14400;\r\n      if (sec === fourHours) {\r\n        stopTimer();\r\n        return;\r\n      }\r\n      const interval = setInterval(() => {\r\n        setSec((sec) => sec + 1);\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isPaused, sec]);\r\n\r\n  const min = sec / 60;\r\n  const displaySec = (sec % 60).toString().padStart(2, \"0\");\r\n  const displayMin = Math.floor(min % 60)\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n  const displayHour = Math.floor(min / 60);\r\n\r\n  function pauseTimer() {\r\n    if (classButton) {\r\n      setClassButton(\"\");\r\n      setPaused(true);\r\n    } else {\r\n      setClassButton(\"active-worklog__btn-pause_run\");\r\n      setPaused(false);\r\n    }\r\n  }\r\n\r\n  function stopTimer() {\r\n    setPaused(true);\r\n    setClassButton(\"\");\r\n    const endTime = calcEndTime();\r\n    props.openPopup();\r\n    props.updateInfoWorklog(nameWorklog, nameIssue);\r\n    props.getTime(startTime.current, endTime);\r\n  }\r\n\r\n  function calcEndTime() {\r\n    let arrTime = startTime.current.split(\":\");\r\n    let [hour, min] = arrTime;\r\n    hour = +hour + +displayHour;\r\n    min = +min + +displayMin;\r\n    if (min >= 60) {\r\n      hour += Math.floor(min / 60);\r\n      min %= 60;\r\n    }\r\n    return `${hour.toString().padStart(2, \"0\")}:${min}`;\r\n  }\r\n\r\n  function handleChangeWorklog(e) {\r\n    setNameWorklog(e.target.value);\r\n  }\r\n\r\n  function handleChangeIssue(e) {\r\n    setNameIssue(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"active-worklog\">\r\n      <p className=\"active-worklog__input-wrapper\">\r\n        <label\r\n          className=\"active-worklog__label visually-hidden\"\r\n          htmlFor=\"worklog-name\"\r\n        >\r\n          Add worklog name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"active-worklog__input\"\r\n          id=\"worklog-name\"\r\n          name=\"worklog-name\"\r\n          placeholder=\"Add worklog name\"\r\n          defaultValue={nameWorklog}\r\n          onChange={handleChangeWorklog}\r\n          autoComplete=\"off\"\r\n        />\r\n      </p>\r\n      <p className=\"active-worklog__input-wrapper\">\r\n        <label\r\n          className=\"active-worklog__label visually-hidden \"\r\n          htmlFor=\"issue-name\"\r\n        >\r\n          Add issue\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"active-worklog__input\"\r\n          id=\"issue-name\"\r\n          name=\"issue-name\"\r\n          placeholder=\"Add issue\"\r\n          defaultValue={nameIssue}\r\n          onChange={handleChangeIssue}\r\n          autoComplete=\"off\"\r\n        />\r\n      </p>\r\n      <span className=\"active-worklog__timer\">{`0${displayHour}:${displayMin}:${displaySec}`}</span>\r\n      <div className=\"active-worklog__btn-wrapper\">\r\n        <button\r\n          className=\"active-worklog__btn active-worklog__btn-stop\"\r\n          onClick={stopTimer}\r\n        >\r\n          <span className=\"visually-hidden\">Stop</span>\r\n        </button>\r\n        <button\r\n          className={`active-worklog__btn active-worklog__btn-pause ${classButton}`}\r\n          onClick={pauseTimer}\r\n        >\r\n          <span className=\"visually-hidden\">Pause</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isStopped: state.popup };\r\n};\r\n\r\nconst mapDispachToProps = {\r\n  openPopup,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(ActiveWorklog);\r\n","import React from \"react\";\r\nimport \"./TimeTracking.scss\";\r\nimport WorklogOptions from \"../WorklogOptions/WorklogOptions\";\r\nimport NewWorklog from \"./NewWorklog\";\r\nimport ActiveWorklog from \"./ActiveWorklog\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction TimeTracking(props) {\r\n  return (\r\n    <section className=\"time-tracking\">\r\n      <div className=\"time-tracking__title-wrapper\">\r\n        <h2 className=\"time-tracking__title\">Time tracking</h2>\r\n        <button className=\"time-tracking__options\">\r\n          <span className=\"visually-hidden\">Options</span>\r\n          <span className=\"time-tracking__round\"></span>\r\n        </button>\r\n        <div className=\"time-tracking__menu-wrapper\">\r\n          <WorklogOptions />\r\n        </div>\r\n      </div>\r\n      {props.isStartTamer ? (\r\n        <ActiveWorklog\r\n          updateInfoWorklog={props.updateInfoWorklog}\r\n          getTime={props.getTime}\r\n        />\r\n      ) : (\r\n        <NewWorklog />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isStartTamer: state.timer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TimeTracking);\r\n","import React from \"react\";\r\nimport \"./Event.scss\";\r\n\r\nfunction Event({ event }) {\r\n  let color;\r\n  switch (event.status) {\r\n    case \"turquoise\":\r\n      color = \"turquoise\";\r\n      break;\r\n    case \"orange\":\r\n      color = \"orange\";\r\n      break;\r\n    default:\r\n      color = \"lavender\";\r\n  }\r\n\r\n  return (\r\n    <li className={`event event_${color}`}>\r\n      <h3 className=\"event__name\">{event.name}</h3>\r\n      <p className=\"event__time\">{event.time}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Event;\r\n","import React from \"react\";\r\nimport \"./EventList.scss\";\r\nimport Event from \"./Event\";\r\n\r\nfunction EventList(props) {\r\n  return (\r\n    <ul className=\"event-list\">\r\n      {props.eventList.map((event) => (\r\n        <Event key={event.id} event={event} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default EventList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./GoogleSync.scss\";\r\nimport EventList from \"./EventList\";\r\nimport { enableSync } from \"../redux/actions\";\r\n\r\nfunction GoogleSync({ enableSync, sync }) {\r\n  const eventList = [\r\n    {\r\n      id: 1,\r\n      name: \"Logo redesign\",\r\n      time: \"09:00 — 10:00\",\r\n      status: \"turquoise\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Meeting with CEO\",\r\n      time: \"14:00 — 14:45\",\r\n      status: \"orange\",\r\n    },\r\n    { id: 3, name: \"Brainstorm\", time: \"15:00 — 16:15\", status: \"lavender\" },\r\n  ];\r\n\r\n  function toggleHandler() {\r\n    enableSync();\r\n  }\r\n\r\n  return (\r\n    <section className=\"google-sync\">\r\n      <div className=\"google-sync__title-wrapper\">\r\n        <h2 className=\"google-sync__title\">Google calendar sync</h2>\r\n        <input\r\n          id=\"google-check\"\r\n          className=\"visually-hidden google-sync__checkbox\"\r\n          type=\"checkbox\"\r\n          name=\"sync-checkbox\"\r\n          defaultChecked={!!sync}\r\n        />\r\n        <label\r\n          htmlFor=\"google-check\"\r\n          className=\"google-sync__label\"\r\n          onClick={toggleHandler}\r\n        ></label>\r\n        <button className=\"google-sync__calendar\">\r\n          <span className=\"visually-hidden\">Open calendar</span>\r\n        </button>\r\n      </div>\r\n      {sync ? <EventList eventList={eventList} /> : null}\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sync: state.sync,\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = {\r\n  enableSync,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(GoogleSync);\r\n","import React from \"react\";\r\nimport \"./Main.scss\";\r\nimport MainScreen from \"../MainScreen/MainScreen\";\r\nimport TimeTracking from \"../TimeTracking/TimeTracking\";\r\nimport GoogleSync from \"../GoogleSync/GoogleSync\";\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <main className=\"page-main\">\r\n      <h1 className=\"visually-hidden\">Time Tracker</h1>\r\n      <MainScreen handleClick={props.handleClick} />\r\n      <TimeTracking\r\n        updateInfoWorklog={props.updateInfoWorklog}\r\n        getTime={props.getTime}\r\n      />\r\n      <GoogleSync />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Slider, Rail, Handles, Tracks } from \"react-compound-slider\";\r\nimport \"./Slider.scss\";\r\n\r\nfunction Slide({ startTime, endTime, update }) {\r\n  let valueStart = useRef();\r\n  let valueEnd = useRef();\r\n  const sevenAM = 420;\r\n  const sevenPM = 1140;\r\n\r\n  function minuteToHour(value) {\r\n    let hours = Math.floor(value / 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    let minutes = (value - hours * 60).toString().padStart(2, \"0\");\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  function timeToMinute(time) {\r\n    let minute = +time.slice(3);\r\n    return parseInt(time) * 60 + minute;\r\n  }\r\n\r\n  let startTimeMin = timeToMinute(startTime);\r\n  let endTimeMin = timeToMinute(endTime);\r\n\r\n  return (\r\n    <Slider\r\n      className=\"sliderStyle\"\r\n      domain={[sevenAM, sevenPM]}\r\n      step={1}\r\n      mode={2}\r\n      values={[+startTimeMin, +endTimeMin]}\r\n    >\r\n      <Rail>\r\n        {({ getRailProps }) => (\r\n          <div className=\"railStyle\" {...getRailProps()} />\r\n        )}\r\n      </Rail>\r\n      <Handles>\r\n        {({ handles, getHandleProps }) => (\r\n          <div className=\"slider-handles\">\r\n            {handles.map((handle) => (\r\n              <Handle\r\n                key={handle.id}\r\n                handle={handle}\r\n                getHandleProps={getHandleProps}\r\n                minuteToHour={minuteToHour}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </Handles>\r\n      <Tracks left={false} right={false}>\r\n        {({ tracks, getTrackProps }) => (\r\n          <div className=\"slider-tracks\">\r\n            {tracks.map(({ id, source, target }) => (\r\n              <Track\r\n                key={id}\r\n                source={source}\r\n                target={target}\r\n                getTrackProps={getTrackProps}\r\n                valueStart={valueStart}\r\n                valueEnd={valueEnd}\r\n                update={update}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </Tracks>\r\n    </Slider>\r\n  );\r\n}\r\n\r\nexport function Handle({\r\n  handle: { id, value, percent },\r\n  getHandleProps,\r\n  minuteToHour,\r\n}) {\r\n  return (\r\n    <div\r\n      style={{\r\n        left: `${percent}%`,\r\n        position: \"absolute\",\r\n        marginLeft: -10,\r\n        marginTop: -3,\r\n        zIndex: 2,\r\n        cursor: \"pointer\",\r\n        color: \"#4F4F4F\",\r\n\r\n        width: 16,\r\n        height: 16,\r\n        backgroundColor: \"#FFCC40\",\r\n        borderRadius: \"50%\",\r\n        border: \"5px solid #ffffff\",\r\n        boxShadow: \"0px 7px 15px rgba(148, 156, 160, 0.13)\",\r\n      }}\r\n      {...getHandleProps(id)}\r\n    >\r\n      <div className=\"handle-value\">{minuteToHour(value)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Track({\r\n  source,\r\n  target,\r\n  getTrackProps,\r\n  valueStart,\r\n  valueEnd,\r\n  update,\r\n}) {\r\n  useEffect(() => {\r\n    valueStart.current = source.value;\r\n    valueEnd.current = target.value;\r\n    update(valueStart.current, valueEnd.current);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        height: 10,\r\n        zIndex: 1,\r\n        borderRadius: 5,\r\n        cursor: \"pointer\",\r\n        left: `${source.percent}%`,\r\n        width: `${target.percent - source.percent}%`,\r\n\r\n        backgroundColor: \"#FFCC40\",\r\n        boxShadow: \"0px 15px 30px rgba(216, 226, 232, 0.12)\",\r\n      }}\r\n      {...getTrackProps()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Slide;\r\n","import React, { useState } from \"react\";\r\nimport \"./PopupNewWorklog.scss\";\r\nimport Slider from \"./Slider/Slider\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { openPopup } from \"../redux/actions\";\r\nimport { startTimer } from \"../redux/actions\";\r\nimport { openNotification } from \"../redux/actions\";\r\nimport { addWorklogInDay } from \"../redux/actions\";\r\n\r\nfunction PopupNewWorklog(props) {\r\n  const [nameWorklog, setNameWorklog] = useState(props.nameWorklog);\r\n  const [nameIssue, setNameIssue] = useState(props.nameIssue);\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const today = moment().format(\"YYYY-MM-DD\");\r\n  const [start, setStart] = useState(0);\r\n  const [end, setEnd] = useState(0);\r\n\r\n  function update(start, end) {\r\n    setStart(start);\r\n    setEnd(end);\r\n  }\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (start === end) {\r\n      showWarningStatus(\"You can't track less than minute.\");\r\n    } else if (!isValid) {\r\n      showWarningStatus(\"Please, enter the worklog name.\");\r\n    } else {\r\n      setNameError(\"\");\r\n      createNewWorklog();\r\n      props.handleClose();\r\n      props.openNotification({});\r\n      props.startTimer();\r\n      props.openPopup();\r\n    }\r\n  }\r\n\r\n  function validate() {\r\n    let nameError = \"\";\r\n\r\n    if (!nameWorklog) {\r\n      nameError = \"Please, enter worklog name\";\r\n    } else {\r\n      nameError = \"\";\r\n      setNameError(nameError);\r\n    }\r\n\r\n    if (nameError) {\r\n      setNameError(nameError);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function showWarningStatus(message) {\r\n    const warningStatus = {\r\n      status: \"warning\",\r\n      message: message,\r\n    };\r\n    props.openNotification(warningStatus);\r\n    props.handleClick();\r\n  }\r\n\r\n  function createNewWorklog() {\r\n    const newWorklog = {\r\n      name: nameWorklog,\r\n      issue: nameIssue,\r\n      started: start,\r\n      ended: end,\r\n      status: \"\",\r\n    };\r\n    const day = addInDay(newWorklog, today);\r\n    props.addWorklogInDay(day);\r\n  }\r\n\r\n  function addInDay(worklog, today) {\r\n    const day = props.day;\r\n    Object.keys(day).map((key) => {\r\n      if (key === today) {\r\n        day[key] = day[key].concat(worklog);\r\n      }\r\n    });\r\n    return day;\r\n  }\r\n\r\n  function handleChangeWorklog(e) {\r\n    setNameWorklog(e.target.value);\r\n  }\r\n\r\n  function handleChangeIssue(e) {\r\n    setNameIssue(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <section className=\"popup-new-worklog\">\r\n        <h2 className=\"popup-new-worklog__title\">New worklog</h2>\r\n        <form\r\n          className=\"popup-new-worklog__form\"\r\n          method=\"POST\"\r\n          onSubmit={submitHandler}\r\n        >\r\n          <div className=\"popup-new-worklog__slider\">\r\n            <Slider\r\n              startTime={props.startTime}\r\n              endTime={props.endTime}\r\n              update={update}\r\n            />\r\n          </div>\r\n          <p className=\"popup-new-worklog__input-wrapper\">\r\n            <label className=\"popup-new-worklog__label\" htmlFor=\"worklog\">\r\n              Worklog name *\r\n            </label>\r\n            <input\r\n              className=\"popup-new-worklog__input\"\r\n              id=\"worklog\"\r\n              name=\"worklog\"\r\n              placeholder=\"Enter the worklog name\"\r\n              defaultValue={nameWorklog}\r\n              onChange={handleChangeWorklog}\r\n              autoComplete=\"off\"\r\n            />\r\n            <span className=\"form-error\">{nameError}</span>\r\n          </p>\r\n\r\n          <p className=\"popup-new-worklog__input-wrapper\">\r\n            <label className=\"popup-new-worklog__label\" htmlFor=\"issue\">\r\n              Issue\r\n            </label>\r\n            <input\r\n              className=\"popup-new-worklog__input\"\r\n              id=\"issue\"\r\n              name=\"issue\"\r\n              placeholder=\"Enter the issue name\"\r\n              defaultValue={nameIssue}\r\n              onChange={handleChangeIssue}\r\n              autoComplete=\"off\"\r\n            />\r\n          </p>\r\n          <div className=\"popup-new-worklog__btn-wrapper\">\r\n            <button className=\"popup-new-worklog__submit\">\r\n              <span className=\"visually-hidden\">Span</span>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"popup-new-worklog__close\"\r\n              onClick={props.openPopup}\r\n            >\r\n              <span className=\"visually-hidden\">Close</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    day: state.day,\r\n    isOpen: state.popup,\r\n    isStartTimer: state.timer,\r\n    statusNotification: state.notification,\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = {\r\n  openPopup,\r\n  startTimer,\r\n  openNotification,\r\n  addWorklogInDay,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(PopupNewWorklog);\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport \"./Notification.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { openNotification } from \"../redux/actions\";\r\n\r\nfunction Notification(props) {\r\n  const WARNING = \"#FFCC40\";\r\n  const DONE = \"#62d2b1\";\r\n  const ERROR = \"#e34040\";\r\n\r\n  let color;\r\n\r\n  switch (props.statusNotification.status) {\r\n    case \"warning\":\r\n      color = { backgroundColor: WARNING };\r\n      break;\r\n    case \"done\":\r\n      color = { backgroundColor: DONE };\r\n      break;\r\n    case \"error\":\r\n      color = { backgroundColor: ERROR };\r\n      break;\r\n    default:\r\n      color = { backgroundColor: \"transparent\" };\r\n  }\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n      classes={{ root: \"notification\" }}\r\n      open={props.open}\r\n      autoHideDuration={5000}\r\n      onClose={props.handleClose}\r\n      action={\r\n        <React.Fragment>\r\n          <h2 className=\"visually-hidden\">Notification message</h2>\r\n          <div className=\"notification__status-wrapper\">\r\n            <span className=\"notification__status\" style={color}></span>\r\n            <button\r\n              className=\"notification__btn-close\"\r\n              onClick={props.handleClose}\r\n            ></button>\r\n          </div>\r\n          <p className=\"notification__message\">\r\n            {props.statusNotification.message}\r\n          </p>\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    statusNotification: state.notification,\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = {\r\n  openNotification,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Notification);\r\n","import React, { useState } from \"react\";\r\n\r\nimport Header from \"./Header/Header\";\r\nimport Main from \"./Main/Main\";\r\nimport PopupNewWorklog from \"./Modal/PopupNewWorklog\";\r\nimport Notification from \"./Modal/Notification\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App(props) {\r\n  const [nameWorklog, setNameWorklog] = useState(\"\");\r\n  const [nameIssue, setNameIssue] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function updateInfoWorklog(nameWorklog, nameIssue) {\r\n    setNameWorklog(nameWorklog);\r\n    setNameIssue(nameIssue);\r\n  }\r\n\r\n  function getTime(startTime, endTime) {\r\n    setStartTime(startTime);\r\n    setEndTime(endTime);\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"time-tracker-app\">\r\n      <Header />\r\n      <Main\r\n        updateInfoWorklog={updateInfoWorklog}\r\n        getTime={getTime}\r\n        handleClick={handleClick}\r\n      />\r\n      {props.isStoppedTimer ? (\r\n        <PopupNewWorklog\r\n          nameWorklog={nameWorklog}\r\n          nameIssue={nameIssue}\r\n          startTime={startTime}\r\n          endTime={endTime}\r\n          handleClick={handleClick}\r\n          handleClose={handleClose}\r\n        />\r\n      ) : null}\r\n      <Notification open={open} handleClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isStoppedTimer: state.popup };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  CREATE_DAY,\r\n  UPDATE_OF_DAY,\r\n  CHANGE_ISSUE,\r\n  CHANGE_NAME,\r\n  DELETE_WORKLOG,\r\n  SET_ALL_STATUSES,\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n  \"2020-09-21\": [],\r\n};\r\n\r\nexport const dayReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_DAY:\r\n      return state.hasOwnProperty(action.key)\r\n        ? { ...state }\r\n        : { [action.key]: [], ...state };\r\n    case UPDATE_OF_DAY:\r\n      return { ...action.payload, ...state };\r\n    case CHANGE_ISSUE:\r\n      return {\r\n        ...state,\r\n        [action.day]: state[action.day].map((worklog, id) => {\r\n          return id !== action.payload.id\r\n            ? worklog\r\n            : {\r\n                ...worklog,\r\n                issue: action.payload.issue,\r\n                status: action.payload.status,\r\n              };\r\n        }),\r\n      };\r\n\r\n    case CHANGE_NAME:\r\n      return {\r\n        ...state,\r\n        [action.day]: state[action.day].map((worklog, id) => {\r\n          return id !== action.payload.id\r\n            ? worklog\r\n            : {\r\n                ...worklog,\r\n                name: action.payload.name,\r\n                status: action.payload.status,\r\n              };\r\n        }),\r\n      };\r\n\r\n    case DELETE_WORKLOG:\r\n      return {\r\n        ...state,\r\n        [action.day]: [\r\n          ...state[action.day].slice(0, action.payload),\r\n          ...state[action.day].slice(action.payload + 1),\r\n        ],\r\n      };\r\n\r\n    case SET_ALL_STATUSES:\r\n      return {\r\n        ...state,\r\n        [action.day]: state[action.day].map((worklog, id) => {\r\n          return {\r\n            ...worklog,\r\n            status: action.statuses[id],\r\n          };\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { OPEN_NOTIFICATION } from \"./types.jsx\";\r\n\r\nconst initialState = {};\r\n\r\nexport const notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case OPEN_NOTIFICATION:\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { dayReducer } from \"./dayReducer\";\r\nimport { notificationReducer } from \"./notificationReducer\";\r\nimport { openPopupReducer } from \"./openPopupReducer\";\r\nimport { startTimerReducer } from \"./startTimerReducer\";\r\nimport { syncReducer } from \"./syncReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  popup: openPopupReducer,\r\n  timer: startTimerReducer,\r\n  notification: notificationReducer,\r\n  day: dayReducer,\r\n  sync: syncReducer,\r\n});\r\n","import { OPEN_POPUP } from \"./types\";\r\n\r\nconst initialState = false;\r\n\r\nexport const openPopupReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case OPEN_POPUP:\r\n      return (state = !state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { START_TIMER } from \"./types\";\r\n\r\nconst initialState = false;\r\n\r\nexport const startTimerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case START_TIMER:\r\n      return (state = !state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ENABLE_SYNC } from \"./types\";\r\n\r\nconst initialState = false;\r\n\r\nexport const syncReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ENABLE_SYNC:\r\n      return (state = !state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./redux/rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}